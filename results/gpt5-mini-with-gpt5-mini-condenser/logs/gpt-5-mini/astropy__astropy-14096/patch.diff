diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py
index ab475f7d0d..8a08ade64a 100644
--- a/astropy/coordinates/sky_coordinate.py
+++ b/astropy/coordinates/sky_coordinate.py
@@ -867,6 +867,25 @@ class SkyCoord(ShapedLikeNDArray):
         )
 
     def __getattr__(self, attr):
+        # If the attribute exists on the class (e.g., a property) then try to
+        # access it directly via the class attribute (descriptor) and if that
+        # raises AttributeError, propagate it rather than masking it below.
+        for cls in type(self).mro():
+            if attr in cls.__dict__:
+                val = cls.__dict__[attr]
+                # If this is a descriptor, call its __get__ to surface any
+                # AttributeError raised by the getter (e.g., missing underlying
+                # attribute) so that it is not masked by the generic error
+                # below. Non-descriptor class attributes are ignored here.
+                if hasattr(val, '__get__') and callable(val.__get__):
+                    try:
+                        return val.__get__(self, type(self))
+                    except AttributeError:
+                        # Propagate the original AttributeError raised inside the
+                        # descriptor so the message reflects the missing underlying
+                        # attribute instead of the property name.
+                        raise
+                break
         """
         Overrides getattr to return coordinates that this can be transformed
         to, based on the alias attr in the primary transform graph.
